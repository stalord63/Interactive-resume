name: Deploy React App to EC2 (No Docker, HTTPS)

on:
  push:
    branches:
      - main_wthout_docker

jobs:
  build-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Install dependencies and build React app
        run: |
          npm ci
          CI=false npm run build

      - name: Archive production files
        run: |
          tar -czf build.tar.gz -C build .

      - name: Copy build files to EC2
        env:
          EC2_HOST: ${{ secrets.EC2_HOST }}
          EC2_USER: ${{ secrets.EC2_USER }}
          EC2_KEY: ${{ secrets.EC2_PRIVATE_KEY }}
        run: |
          echo "$EC2_KEY" > private_key.pem
          chmod 600 private_key.pem
          scp -o StrictHostKeyChecking=no -i private_key.pem build.tar.gz $EC2_USER@$EC2_HOST:/home/$EC2_USER/

      - name: Deploy on EC2
        env:
          EC2_HOST: ${{ secrets.EC2_HOST }}
          EC2_USER: ${{ secrets.EC2_USER }}
          EC2_KEY: ${{ secrets.EC2_PRIVATE_KEY }}
        run: |
            echo "$EC2_KEY" > private_key.pem
            chmod 600 private_key.pem

         
            scp -o StrictHostKeyChecking=no -i private_key.pem build.tar.gz $EC2_USER@$EC2_HOST:/home/$EC2_USER/
            scp -o StrictHostKeyChecking=no -i private_key.pem nginx/react-app.conf $EC2_USER@$EC2_HOST:/home/$EC2_USER/react-app.conf

            ssh -o StrictHostKeyChecking=no -i private_key.pem $EC2_USER@$EC2_HOST << 'EOF'
            set -e

            # Stop Nginx
            sudo systemctl stop nginx || true

            # Extract build
            rm -rf /home/$USER/build
            mkdir -p /home/$USER/build
            tar -xzf /home/$USER/build.tar.gz -C /home/$USER/build

            # Move build to web rootd
            sudo rm -rf /var/www/html/*
            sudo mv /home/$USER/build/* /var/www/html/

            # Copy Nginx config
            sudo mv /home/$USER/react-app.conf /etc/nginx/sites-available/react-app.conf
            sudo ln -sf /etc/nginx/sites-available/react-app.conf /etc/nginx/sites-enabled/react-app.conf

            # Test and restart Nginx
            sudo nginx -t
            sudo systemctl restart nginx

            # # Obtain or renew SSL
            # sudo certbot --nginx -d stalord.in -d www.stalord.in --agree-tos -m admin@stalord.in --non-interactive || true
            CERT_FILE="/etc/letsencrypt/live/stalord.in/fullchain.pem"
            if [ ! -f "$CERT_FILE" ]; then
              echo "No cert found, requesting new certificate..."
              sudo certbot --nginx -d stalord.in -d www.stalord.in --agree-tos -m admin@stalord.in --non-interactive
            else
                expiry_ts=$(sudo openssl x509 -in "$CERT_FILE" -noout -enddate | cut -d= -f2 | xargs -I{} date -d "{}" +%s)
                now_ts=$(date +%s)
                days_left=$(( (expiry_ts - now_ts) / 86400 ))
                echo "Certificate expires in $days_left days"
            if [ "$days_left" -lt 30 ]; then
                  echo "Cert expiring soon, renewing..."
                  sudo certbot renew --nginx --agree-tos --non-interactive
              else
                  echo "Cert valid, skipping issuance"
              fi
            fi

            # Restart Nginx after SSL
            sudo systemctl restart nginx
            EOF

