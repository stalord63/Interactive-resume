name: Deploy React App to EC2 using Docker + HTTPS

on:
  push:
    branches: [main]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Source Code
        uses: actions/checkout@v4

      - name: Build Docker Image
        run: docker build -t react-app .

      - name: Copy files to EC2
        run: |
          echo "${{ secrets.EC2_PRIVATE_KEY }}" > key.pem
          chmod 600 key.pem
          scp -o StrictHostKeyChecking=no -i key.pem -r ./* ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }}:/home/${{ secrets.EC2_USER }}/react-app

      - name: SSH and deploy Docker container with HTTPS
        run: |
          echo "${{ secrets.EC2_PRIVATE_KEY }}" > key.pem
          chmod 600 key.pem
          ssh -o StrictHostKeyChecking=no -i key.pem ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} <<'EOF'
            set -e
            cd /home/${{ secrets.EC2_USER }}/react-app

            # Build Docker image
            docker build -t react-app .

            # Stop and remove old container if exists
            docker stop react-app || true
            docker rm react-app || true

            # Run container (HTTP first)
            docker run -d -p 80:80 --name react-app react-app

            # Install Certbot and get SSL certificate
            sudo apt-get update -y
            sudo apt-get install -y certbot
            sudo systemctl stop nginx || true
            sudo certbot certonly --standalone \
              -d ${{ secrets.DOMAIN }} -d www.${{ secrets.DOMAIN }} \
              --agree-tos -m admin@${{ secrets.DOMAIN }} --non-interactive || true

            # Create HTTPS Nginx config
                        cat <<'CONF' | sudo tee ~/nginx-ssl.conf
            server {
                listen 80;
                server_name ${{ secrets.DOMAIN }} www.${{ secrets.DOMAIN }};
                return 301 https://\$host\$request_uri;
            }

            server {
                listen 443 ssl;
                server_name ${{ secrets.DOMAIN }} www.${{ secrets.DOMAIN }};

                ssl_certificate /etc/letsencrypt/live/${{ secrets.DOMAIN }}/fullchain.pem;
                ssl_certificate_key /etc/letsencrypt/live/${{ secrets.DOMAIN }}/privkey.pem;

                location / {
                    root /usr/share/nginx/html;
                    index index.html;
                    try_files \$uri /index.html;
                }
            }
            CONF

                        # Stop temporary container and start secure one
                        docker stop react-app || true
                        docker rm react-app || true

                        docker run -d \
                          --name react-app \
                          -p 80:80 -p 443:443 \
                          -v /etc/letsencrypt:/etc/letsencrypt:ro \
                          -v ~/nginx-ssl.conf:/etc/nginx/conf.d/default.conf \
                          react-app
                      EOF
